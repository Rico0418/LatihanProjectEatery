Line Sql Untuk tabel baru
/*** tabble for recipe ***/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Table [dbo].[msRecipe](
	[RecipeID] [int] IDENTITY(1,1) NOT NULL,
	[RecipeName] [varchar](100) NOT NULL,
	[RecipeDescription] [varchar](300) NOT NULL, 
	[DishID] [int] NOT NULL,
	[AuditedActivity] [char](1) NOT NULL,
	[AuditedTime][datetime] NOT NULL,
PRIMARY KEY CLUSTERED
(
	[RecipeID] ASC
)WITH(PAD_INDEX=OFF,STATISTIC_NOREMCOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
)ON [PRIMARY]
GO




/*** tabble for ingredient ***/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Table [dbo].[[msIngredient](
	[IngredientID][int] IDENTITY(1,1) NOT NULL,
	[IngredientName][varchar](100) NOT NULL,
	[IngredientQuantity][int] NOT NULL,
	[IngredientUnit][varchar](10) NOT NULL,
	[RecipeID][int] NOT NULL,
	[AuditedActivity][char](1) NOT NULL,
	[AuditedTime][datetime] NOT NULL,
PRIMARY KEY CLUSTERED
(
	[IngredientID] ASC
)WITH (PAD_INDEX = OFF,STATISTIC_NOREMCOMPUTE=OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]	
GO

/**ADD FOREIGN KEY**/
ALTER TABLE [dbo].[msRecipe] WITH CHECK ADD FOREIGN KEY([DishID])
REFERENCES [dbo].[msDish] ([DishID])
GO

ALTER TABLE [dbo].[msIngredient] WITH CHECK ADD FOREIGN KEY([RecipeID])
REFERENCES [dbo].[msRecipe] ([RecipeID])
GO

/**StoredProcedure [dbo].[Recipe_Get]**/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Recipe_Get]
AS
BEGIN
	SELECT RecipeID, 
	RecipeName,
	RecipeDescription,
	DishID FROM msRecipe WITH(NOLOCK)
	WHERE AuditedActivity<>'D'
END
GO

/**StoredProcedure [dbo].[Recipe_GetByID]**/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Recipe_Get]
	@RecipeID INT
AS
BEGIN
	SELECT RecipeID, 
	RecipeName,
	RecipeDescription,
	DishID FROM msRecipe WITH(NOLOCK)
	WHERE RecipeID=@RecipeID AND AuditedActivity<>'D'
END
GO

/**StoredProcedure [dbo].[Recipe_InsertUpdate]**/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Recipe_InsertUpdate]
	@RecipeID INT OUTPUT,
	@RecipeName VARCHAR(100),
	@RecipeDescription VARCHAR(300),
	@DishID INT
AS
BEGIN
	DECLARE @RetVal INT
	IF EXIST(SELECT 1 FROM msRecipe WITH(NOLOCK) WHERE RecipeID = @RecipeID AND AuditedActivity <> 'D')
	BEGIN
	     UPDATE msRecipe
	     SET RecipeName = @RecipeName,
		 RecipeDescription = @RecipeDescription,
		 DishID = @DishID,
		 AuditedActivity = 'U',
	         AuditedTime = GETDATE()
	     WHERE RecipeID = @RecipeID AND AuditedActivity <> 'D'
	     SET @RetVal = @RecipeID
	END
	ELSE
	BEGIN
	     INSERT INTO msRecipe
	     (RecipeName, RecipeDescription, DishID,AuditedActivit,AuditedTime)
	     VALUES
	     (@RecipeName, @RecipeDescription, @DishID, 'I', GETDATE())
	     SET @RetVal = SCOPE_IDENTITY()
	END
	SELECT @RecipeId = @Retval
END
GO



/**StoredProcedure [dbo].[Ingredient_Get]**/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Ingredient_Get]
AS
BEGIN
	SELECT IngredientID, 
	IngredientName,
	IngredientQuantity,
	IngredientUnit,
	RecipeID FROM msIngredient WITH(NOLOCK)
	WHERE AuditedActivity<>'D'
END
GO

/**StoredProcedure [dbo].[Ingredient_GetByID]**/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Ingredient_GetByID]
	@IngredientID
AS
BEGIN
	SELECT IngredientID, 
	IngredientName,
	IngredientQuantity,
	IngredientUnit,
	RecipeID FROM msIngredient WITH(NOLOCK)
	WHERE IngredientID = @IngredientID AND AuditedActivity<>'D'
END
GO

/**StoredProcedure [dbo].[Ingredient_Delete]**/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Ingredient_Delete]
	@IngredientIDs VARCHAR(MAX)
AS
BEGIN
	Update msIngredient
	SET AuditedActivity = 'D',
		AuditedTime = GETDATE()
	WHERE IngredientID IN(SELECT value FROM fn_General_Split(@IngredientIDs, ','))
END
GO

/**StoredProcedure [dbo].[Ingredient_InsertUpdate]**/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Ingredient_InsertUpdate]
	@IngredientID INT OUTPUT,
	@IngredientName VARCHAR(100),
	@IngredientQuantity INT,
	@IngredientUnit VARCHAR(10),
	@RecipeID INT
AS
BEGIN
	DECLARE @RetVal INT
	IF EXIST(SELECT 1 FROM msIngredient WITH(NOLOCK) WHERE IngredientID = @IngredientID AND AuditedActivity <> 'D')
	BEGIN
               Update msIngredient
	       SET IngredientName = @IngredientName,
		    IngredientQuantity = @IngredientQuantity,
		    IngredientUnit = @IngredientUnit,
		    RecipeID = @RecipeID,	
		    AuditedActivity ='U',
		    AuditedTime = GETDATE()
               WHERE IngredientID = @IngredientID AND AuditedActivity<> 'D'
               SET @RetVal = @IngredientID
	END
	ELSE
	BEGIN
	       INSERT INTO msIngredient
	       (IngredientName, IngredientQuantity, IngredientUnit, RecipeID, AuditedActivity, AuditedTime)
	       VALUES
	       (@IngredientName, @IngredientQuantity, @IngredientUnit,@RecipeID,'I',GETDATE())
	       SET @RetVal = SCOPE_IDENTITY()
	END
	SELECT @IngredientId = @RetVal 
END
GO

/**Seeding into msDish **/
INSERT INTO msDish (DishTypeID, DishName, DishPrice, AuditedActivity, AuditedTime) VALUES(1,'Nasi Goreng Sapi', 50000, 'I', GETDATE()), (2,'CapCay', 60000, 'I', GETDATE()), (3,'Pasta', 55000, 'I', GETDATE())

/**Seeding into msRecipe **/
INSERT INTO msRecipe(RecipeName, RecipeDescription, DishID, AuditedActivity,AuditedTime) VALUES('Nasi Goreng Kambing Jawa', 'tambahkan nasi dan gula jawa','1','I',GETDATE()), ('Nasi Goreng Kambing Jakarta', 'tambahkan nasi dan kecap','1','I',GETDATE()), ('Capcay Chinese', 'tambahkan bakso babi','2','I',GETDATE()), ('Capcay Jawa', 'tambahkan bakso sapi','2','I',GETDATE()), ('Pasta Keju', 'tambahkan keju','3','I',GETDATE()), ('Pasta Nori', 'tambahkan nori','3','I',GETDATE())

/**Seeding into msIngredient **/
INSERT INTO msIngredient(IngredientName, IngredientQuantity, Ingredient Unit, RecipeID, AuditedActivity, AuditedTime) VALUES ('Nasi', 2, 'sdn', 1,'I',GETDATE()), ('Kecap', 5, 'sdm', 1,'I',GETDATE()), ('Bawang putih', 2, 'siung', 1,'I',GETDATE())